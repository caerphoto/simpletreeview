
(function(root,factory){if(typeof define==='function'&&define.amd){define(['jquery','underscore'],factory);}else{root.SimpleTreeView=factory(root.jQuery,root._);}}(this,function($,_){var D=window.document;var UNSELECTED=0;var PARTIAL=1;var SELECTED=2;function NodeLocationError(loc){this.loc=loc||[];this.name='NodeLocationError';this.message=' is not a valid node location.';this.toString=function(){return this.loc.join(' ')+this.message;};}
NodeLocationError.prototype=new Error();NodeLocationError.prototype.constructor=NodeLocationError;function TreeDataError(message){this.message=message||'';this.name='TreeDataError';this.toString=function(){return this.message;};}
TreeDataError.prototype=new Error();TreeDataError.prototype.constructor=TreeDataError;function setChildrenState(node,state){_(node.children).each(function(child){child.state=state;setNodeElementStateClass(child);setChildrenState(child,state);});return state;}
function setAnscestorState(node){var parent;var allSelected;var allUnselected;if(!node||!node.parent){return;}
parent=node.parent;allSelected=_(parent.children).every(function(child){return child.state===SELECTED;});allUnselected=_(parent.children).every(function(child){return child.state===UNSELECTED;});if(allSelected){parent.state=SELECTED;}else if(allUnselected){parent.state=UNSELECTED;}else{parent.state=PARTIAL;}
setNodeElementStateClass(parent);setAnscestorState(parent);}
function setNodeElementStateClass(node){var $el;if(!node.elements){return;}
$el=node.elements.$el;if(node.state===SELECTED){$el.removeClass('stv-unselected stv-partially-selected');$el.addClass('stv-selected');}else if(node.state===PARTIAL){$el.removeClass('stv-unselected stv-selected');$el.addClass('stv-partially-selected');}else{$el.removeClass('stv-partially-selected stv-selected');$el.addClass('stv-unselected');}}
function createElements(recurseDepth,appendToParentList){var el;var label=D.createElement('label');var checkbox=D.createElement('span');var expander=D.createElement('span');var childList;if(this.parent){el=D.createElement('li');el.className='stv-child-node';}else{el=this.tree.__rootElement;el.className='stv-root-node';}
el.setAttribute('data-node-id',this.id);el.setAttribute('data-value',this.value);el.className+=' stv-node';label.className='stv-label';if(this.tree.__options.HTMLLabels){label.innerHTML=this.label;}else{label.appendChild(D.createTextNode(this.label));}
checkbox.className='stv-checkbox';if(this.state===UNSELECTED){el.className+=' stv-unselected';}else if(this.state===PARTIAL){el.className+=' stv-partially-selected';}else{el.className+=' stv-selected';}
expander.className='stv-expander';if(recurseDepth===0&&this.children.length>0){el.className+=' stv-collapsed';}else if(this.children.length>0){el.className+=' stv-expanded';}
el.appendChild(expander);el.appendChild(checkbox);el.appendChild(label);if(this.children.length>0){childList=D.createElement('ul');childList.className='stv-child-list';el.appendChild(childList);el.className+=' stv-parent';}else{childList=null;el.className+=' stv-leaf';}
if(this.children.length>0&&recurseDepth!==0){_(this.children).each(function(child){createElements.call(child,(recurseDepth||0)-1);childList.appendChild(child.elements.el);});}
if(appendToParentList){this.parent.elements.childList.appendChild(el);}
this.elements={label:label,childList:childList,checkbox:checkbox,expander:expander,el:el,$el:$(el)};}
var TreeNode={create:function(attrs,parent,tree){var node;function N(){}
N.prototype=TreeNode.prototype;node=new N();if(!attrs){throw'Attempted to call prepareNode with no data';}
if(parent&&!_(attrs).has('label')&&!_(attrs).has('value')){throw'Encountered tree node with no label or value';}
if(_(attrs).has('value')&&!_(attrs).has('label')){node.value=attrs.value;node.label=attrs.value;}
if(_(attrs).has('label')&&!_(attrs).has('value')){node.label=attrs.label;node.value=attrs.label;}
if(_(attrs).has('label')&&_(attrs).has('value')){node.label=attrs.label;node.value=attrs.value;}
node.tree=tree;node.parent=parent;node.state=UNSELECTED;node.id=_.uniqueId('STV_');node.elements=null;if(_(attrs).has('children')&&_(attrs.children).isArray()&&attrs.children.length){node.children=_(attrs.children).map(function(child){return TreeNode.create(child,node,tree);},node);}else{node.children=[];}
if(tree.__nodeHash[node.id]){throw new TreeDataError('ID of '+node.id+'already exists');}
node.tree.__nodeHash[node.id]=node;return node;}};TreeNode.prototype={labelOrValueMatches:function(lowerCaseTerm){var label=this.label.toLowerCase();var value;if(label.indexOf(lowerCaseTerm)!==-1){return true;}
value=this.value.toLowerCase();if(value.indexOf(lowerCaseTerm)!==-1){return true;}
return false;},select:function(){this.state=SELECTED;setNodeElementStateClass(this);setChildrenState(this,this.state);setAnscestorState(this);return this;},deselect:function(){this.state=UNSELECTED;setNodeElementStateClass(this);setChildrenState(this,this.state);setAnscestorState(this);return this;}};function copyNode(node){return{label:node.label,value:node.value,parent:node.parent,state:node.state,children:_(node.children).map(copyNode)};}
function findNodeWithValue(root,value){var i,l;var node;if(root.value===value){return root;}
if(root.children.length===0){return;}
for(i=0,l=root.children.length;i<l;i+=1){if(root.children[i].value===value){return root.children[i];}
node=findNodeWithValue(root.children[i],value);if(node){return node;}}}
function findNodes(root,lowerCaseTerm){var nodes=[];if(!root){return nodes;}
if(root.labelOrValueMatches(lowerCaseTerm)){nodes.push(root);}
if(root.children.length===0){return nodes;}
_.each(root.children,function(child){if(child.labelOrValueMatches(lowerCaseTerm)){nodes.push(child);}
nodes=nodes.concat(findNodes(child,lowerCaseTerm));});return nodes;}
function toggleNodeExpansion(node,expanded){if(expanded){if(node.elements===null){console.log(node);}
node.elements.$el.removeClass('stv-collapsed');node.elements.$el.addClass('stv-expanded');}else{node.elements.$el.toggleClass('stv-collapsed');node.elements.$el.toggleClass('stv-expanded');}
if(node.elements.$el.hasClass('stv-expanded')&&node.children.length>0){_(node.children).each(function(child){if(!child.elements){createElements.call(child,0,true);}});}}
function ensureElements(node){if(node.parent&&!node.parent.elements){ensureElements(node.parent);}
if(node.parent){toggleNodeExpansion(node.parent,true);}}
function isElement(el){var ELEMENT_NODE=1;var DOCUMENT_FRAGMENT_NODE=11;return el.nodeType&&(el.nodeType===ELEMENT_NODE||el.nodeType===DOCUMENT_FRAGMENT_NODE);}
var SimpleTreeView={create:function(opts){var o;var tree;function T(){}
T.prototype=SimpleTreeView.prototype;tree=new T();tree.__root={};tree.__options={HTMLLabels:false,filter:true};tree.__el=null;tree.__nodeHash={};tree.__rootElement=D.createElement('div');tree.__$rootElement=$(tree.__rootElement);_(tree.__options).extend(opts);o=tree.__options;if(o.data){tree.setData(o.data);}
if(o.filter){tree.__createFilterElement();}
if(o.element){tree.setElement(o.element);}
if(o.initialSelection){tree.setSelection(o.initialSelection);}
return tree;},NodeLocationError:NodeLocationError,TreeDataError:TreeDataError,UNSELECTED:UNSELECTED,PARTIAL:PARTIAL,SELECTED:SELECTED};SimpleTreeView.prototype={getData:function(){return this.__root;},copyData:function(){return copyNode(this.__root);},setData:function(data){this.__root=TreeNode.create(data,null,this);return this;},nodeAt:function(loc){var node=this.getData();if(!node.children){throw new TreeDataError('Tree has no data');}
_(loc).each(function(index){if(node.children.length>0&&node.children[index]){node=node.children[index];}else{throw new NodeLocationError(loc);}},this);return node;},nodeWithValue:function(value){var root=this.getData();if(!root.children){throw new TreeDataError('Tree has no data');}
return findNodeWithValue(this.getData(),value);},nodeWithId:function(id){return this.__nodeHash[id];},getElement:function(){return this.__el;},setElement:function(el){if(!el){throw new TypeError('Unable to set element to'+el);}
if(!isElement(el)){throw new TypeError('Expected Element (1) or Fragment (11), got '+
el.nodeType);}
this.__el=el;this.__$el=$(el);this.__setEventHandlers();return this;},getSelectedNodes:function(node){var selection=[];var childSelection;if(!node){node=this.__root;}
if(node.state===SELECTED){selection.push(node);}else if(node.state===PARTIAL){_.each(node.children,function(child){if(child.state===SELECTED){selection.push(child);}else if(child.state===PARTIAL){childSelection=this.getSelectedNodes(child);selection=selection.concat(childSelection);}},this);}
return selection;},getSelection:function(){return _(this.getSelectedNodes()).pluck('value');},setSelection:function(selection){var currentSelection=this.getSelectedNodes();_(currentSelection).invoke('deselect');if(_.isString(selection)){this.nodeWithValue(selection).select();return this;}
if(_.isArray(selection)){_(selection).each(function(value){this.nodeWithValue(value).select();},this);return this;}
throw new TypeError('Expected string or array when setting selection, but got '+(typeof selection));},__createFilterElement:function(){var elFilter=this.elFilter=document.createElement('div');var input=document.createElement('input');var label=document.createElement('label');input.className='stv-filter-input';input.type='text';label.appendChild(document.createTextNode('Search'));label.className='stv-filter-label';elFilter.appendChild(label);elFilter.appendChild(input);this.$elFilter=$(this.elFilter);},__applyFilter:function(term){var matchedNodes;this.__$rootElement.toggleClass('stv-filtering',!!term);this.__$rootElement.find('.stv-filter-match').removeClass('stv-filter-match');this.__$rootElement.find('.stv-filter-descendant-match').removeClass('stv-filter-descendant-match');if(!term){return;}
matchedNodes=findNodes(this.getData(),term.toLowerCase());_(matchedNodes).each(function(node){ensureElements(node);node.elements.$el.addClass('stv-filter-match');node.elements.$el.parentsUntil(this.__$el,'.stv-node').addClass('stv-filter-descendant-match');});},__setEventHandlers:function(){var tree=this;this.__$rootElement.on('click','.stv-checkbox, .stv-label',function(){var nodeId=this.parentNode.getAttribute('data-node-id');var node=tree.nodeWithId(nodeId);if(!node){throw new Error('Unable to handle click on element with node id '+nodeId+': node not found');}
if(node.state===SELECTED){node.deselect();}else{node.select();}});this.__$rootElement.on('click','.stv-expander',function(){var nodeId=this.parentNode.getAttribute('data-node-id');var node=tree.nodeWithId(nodeId);if(!node){throw new Error('Unable to handle click on element with node id '+nodeId+': node not found');}
toggleNodeExpansion(node);});if(!this.elFilter){return;}
this.$elFilter.on('keyup','input',function(){var term=this.value;clearTimeout(tree.__filterTimeout);tree.__filterTimeout=setTimeout(function(){tree.__applyFilter(term);},500);});},render:function(recurseDepth){if(!this.__el||!isElement(this.__el)){throw new TypeError('Unable to render tree with no valid element');}
recurseDepth=_.isNumber(recurseDepth)?recurseDepth:-1;createElements.call(this.__root,recurseDepth);if(this.elFilter){this.__el.appendChild(this.elFilter);}
this.__el.appendChild(this.__rootElement);}};return SimpleTreeView;}));